# Generated by Django 3.2.13 on 2022-04-27 23:58

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import product.utils


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('shop', '0001_initial'),
        ('product', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Category title', max_length=50, verbose_name='title')),
                ('help_text', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'attribute',
                'verbose_name_plural': 'attribute',
            },
        ),
        migrations.AlterModelOptions(
            name='product',
            options={'verbose_name': 'product', 'verbose_name_plural': 'product'},
        ),
        migrations.RenameField(
            model_name='product',
            old_name='category_id',
            new_name='category',
        ),
        migrations.RemoveField(
            model_name='category',
            name='parent_id',
        ),
        migrations.RemoveField(
            model_name='product',
            name='tag_id',
        ),
        migrations.AddField(
            model_name='category',
            name='parent',
            field=models.ForeignKey(blank=True, default=None, help_text='Parent category', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child', to='product.category', verbose_name='parent id'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='products', related_query_name='product', to='product.Tag'),
        ),
        migrations.AlterField(
            model_name='category',
            name='icon',
            field=models.ImageField(default=None, help_text='Category icon', null=True, upload_to=product.utils.category_icon_path, verbose_name='icon'),
        ),
        migrations.AlterField(
            model_name='product',
            name='image',
            field=models.ImageField(blank=True, help_text='Product image', upload_to=product.utils.product_image_path, verbose_name='image'),
        ),
        migrations.AlterField(
            model_name='product',
            name='long_description',
            field=models.TextField(help_text='Product long description', max_length=1500, verbose_name='long description'),
        ),
        migrations.AlterField(
            model_name='product',
            name='title',
            field=models.CharField(help_text='Product title', max_length=150, verbose_name='title'),
        ),
        migrations.CreateModel(
            name='UserProductView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateField(auto_now_add=True)),
                ('product', models.ForeignKey(help_text="Preview's product", on_delete=django.db.models.deletion.CASCADE, related_name='user_product_view', to='product.product', verbose_name='User product view product')),
                ('user', models.ForeignKey(help_text="Preview's user", on_delete=django.db.models.deletion.CASCADE, related_name='user_product_view', to=settings.AUTH_USER_MODEL, verbose_name='User product view user')),
            ],
            options={
                'verbose_name': 'user product view',
                'verbose_name_plural': 'user product views',
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9)),
                ('count', models.PositiveIntegerField(default=0)),
                ('product', models.ForeignKey(help_text="Stock's product", on_delete=django.db.models.deletion.CASCADE, related_name='stock', to='product.product', verbose_name='product id')),
                ('shop', models.ForeignKey(help_text="Stock's shop", on_delete=django.db.models.deletion.CASCADE, related_name='stock', to='shop.shop', verbose_name='shop id')),
            ],
            options={
                'verbose_name': 'stock',
                'verbose_name_plural': 'stocks',
            },
        ),
        migrations.CreateModel(
            name='DailyOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('select_date', models.DateField(default=datetime.date.today)),
                ('product', models.ForeignKey(help_text="Daily's offer product", on_delete=django.db.models.deletion.CASCADE, related_name='daily_offer', to='product.product', verbose_name='product')),
            ],
            options={
                'verbose_name': 'daily offer',
                'verbose_name_plural': 'daily offers',
            },
        ),
        migrations.CreateModel(
            name='AttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255, verbose_name='value')),
                ('attribute', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='attribute_value', to='product.attribute', verbose_name="attribute's value")),
            ],
            options={
                'verbose_name': 'attribute value',
                'verbose_name_plural': 'attribute values',
            },
        ),
        migrations.AddField(
            model_name='attribute',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attribute', to='product.category', verbose_name="attribute's category"),
        ),
    ]
